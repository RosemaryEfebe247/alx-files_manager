import { createClient } from 'redis';
import { promisify } from 'util';

class RedisClient {

    constructor() {
	this.client = createClient();
	this.client.connected = true;

	this.client.on('connect', () => {
	    this.client.connected = true;
	    console.log('Redis client connected successfully')
	});

	this.client.on('error', () => {
	    this.client.connected = false;
	    console.log('Redis Client Error:', error)
	});

	// Promisify Redis commands
	this.getAsync = promisify(this.client.get).bind(this.client);
	this.setAsync = promisify(this.client.set).bind(this.client);
	this.expireAsync = promisify(this.client.expire).bind(this.client);
	this.delAsync = promisify(this.client.del).bind(this.client);
    }

    isAlive() {
	return this.client.connected;
    }

    async get(key) {
	return await this.getAsync(key);
    }

    async set(key, value, duration) {
	const reply = await this.setAsync(key, value);
	if (reply === 'OK') {
	    return this.expireAsync(key, duration);
	}
	throw new Error('Failed to set key')
    }
    

    async del(key) {
	return this.delAsync(key)
    }
}

const redisClient = new RedisClient();
module.exports = redisClient;
